name: Publish CLI

on:
  release:
    types: [published]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  metadata:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Add release information (temporary)
        run: gh release edit ${{ github.ref_name }} -n "${{ github.event.release.body }}\n\nAutomatically creating the release...\n\n**SHA256 win-x64** `soon`\n**SHA256 win-x86** `soon`\n**SHA256 linux-x64** `soon`"
    
  build:
    needs: metadata
    
    strategy:
      matrix:
        os: [{ os: windows-latest, runtime: win-x64 }, { os: windows-latest, runtime: win-x86 }, { os: ubuntu-latest, runtime: linux-x64 }]

    runs-on: ${{ matrix.os.os }}
    name: Publish with ${{ matrix.os.os }} (${{ matrix.os.runtime }})
    
    env:
      PROJECT_NAME: QuizConsole
      ZIP_FILE: ${{ env.PROJECT_NAME }}-${{ matrix.os.runtime }}.${{ github.ref_name }}.zip
    
    permissions:
      contents: write # important for upload

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish ${{ matrix.os.runtime }}
        run: dotnet publish ${{ env.PROJECT_NAME }} \
          -c Release \
          -f net7.0 \
          -r ${{ matrix.os.runtime }} \
          -o build/${{ env.PROJECT_NAME }}-${{ matrix.os.runtime }} \
          -p:PublishSingleFile=true \
          -p:EnableCompressionInSingleFile=true \
          -p:PublishTrimmed=true \
          -p:TrimMode=partial \
          --self-contained
          
      - name: Zip to ${{ env.ZIP_FILE }}
        uses: thedoctor0/zip-release@main
        with:
          directory: build
          path: ${{ env.PROJECT_NAME }}-${{ matrix.os.runtime }}
          filename: ../${{ env.ZIP_FILE }}

      - name: SHA256 checksum
        uses: Huy-Ngo/gha-sha@v1.1.0
        with:
          glob: ${{ env.ZIP_FILE }}

      - name: Upload ${{ env.ZIP_FILE }} to this release
        run: gh release upload ${{ github.ref_name }} ${{ env.ZIP_FILE }}
        
      - name: Add release information (temporary)
        run: gh release edit ${{ github.ref_name }} -n "${{ github.event.release.body }}\n\nThe ZIP was automatically generated using the [publish workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})."
